{'CLASSES': {'fsbilling.fsbilling.app_templete.tests.TestCore': {'bases': ['fsbilling.fsbilling.app_templete.tests.TestCase'],
                                                                 'constructor': [],
                                                                 'docstring': '',
                                                                 'methods': [('setUp', [], ''),
                                                                             ('tearDown',
                                                                              [],
                                                                              '')],
                                                                 'properties': []},
             'fsbilling.fsbilling.base.admin.BalanceAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                             'constructor': [],
                                                             'docstring': '',
                                                             'methods': [],
                                                             'properties': ['list_display',
                                                                            'actions',
                                                                            'save_as',
                                                                            'save_on_top',
                                                                            'list_per_page']},
             'fsbilling.fsbilling.base.admin.BillingBaseAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                                 'constructor': [],
                                                                 'docstring': '',
                                                                 'methods': [],
                                                                 'properties': ['list_display',
                                                                                'list_filter',
                                                                                'save_as',
                                                                                'save_on_top']},
             'fsbilling.fsbilling.base.admin.CurrencyAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                              'constructor': [],
                                                              'docstring': '',
                                                              'methods': [],
                                                              'properties': ['list_display',
                                                                             'actions',
                                                                             'save_as',
                                                                             'save_on_top',
                                                                             'list_per_page']},
             'fsbilling.fsbilling.base.admin.CurrencyBaseAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                                  'constructor': [],
                                                                  'docstring': '',
                                                                  'methods': [],
                                                                  'properties': ['list_display',
                                                                                 'actions',
                                                                                 'save_as',
                                                                                 'save_on_top',
                                                                                 'list_per_page']},
             'fsbilling.fsbilling.base.management.commands.load_billing.Command': {'bases': ['django.core.management.base.NoArgsCommand'],
                                                                                   'constructor': [],
                                                                                   'docstring': '',
                                                                                   'methods': [('handle_noargs',
                                                                                                ['**options'],
                                                                                                'Load FSadmin default data.')],
                                                                                   'properties': ['help']},
             'fsbilling.fsbilling.base.managers.BalanceManager': {'bases': ['django.db.models.Manager'],
                                                                  'constructor': [],
                                                                  'docstring': '',
                                                                  'methods': [('create_balance',
                                                                               ['contact'],
                                                                               '\n        \xd0\x91\xd0\xb0\xd0\xbb\xd0\xb0\xd0\xbd\xd1\x81 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8f\n        ')],
                                                                  'properties': []},
             'fsbilling.fsbilling.base.migrations.0001_initial.Migration': {'bases': [],
                                                                            'constructor': [],
                                                                            'docstring': '',
                                                                            'methods': [('forwards',
                                                                                         ['orm'],
                                                                                         ''),
                                                                                        ('backwards',
                                                                                         ['orm'],
                                                                                         '')],
                                                                            'properties': ['models',
                                                                                           'complete_apps']},
             'fsbilling.fsbilling.base.models.Balance': {'bases': ['django.db.models.Model'],
                                                         'constructor': [],
                                                         'docstring': '(Balance description)',
                                                         'methods': [('__unicode__', [], ''),
                                                                     ('get_absolute_url',
                                                                      [],
                                                                      ''),
                                                                     ('cash_currency',
                                                                      [],
                                                                      'docstring for rate_currency')],
                                                         'properties': ['accountcode',
                                                                        'cash',
                                                                        'tariff',
                                                                        'objects',
                                                                        'enabled',
                                                                        'active_objects',
                                                                        'inactive_objects',
                                                                        'timelimit',
                                                                        'credit',
                                                                        'currency']},
             'fsbilling.fsbilling.base.models.Currency': {'bases': ['django.db.models.Model'],
                                                          'constructor': [],
                                                          'docstring': 'docstring for Currency',
                                                          'methods': [('get_absolute_url',
                                                                       [],
                                                                       ''),
                                                                      ('__unicode__', [], '')],
                                                          'properties': ['currency_name',
                                                                         'rate',
                                                                         'date_start',
                                                                         'date_end',
                                                                         'enabled',
                                                                         'primary',
                                                                         'objects',
                                                                         'active_objects',
                                                                         'inactive_objects',
                                                                         'enabled_date',
                                                                         'rate_currency']},
             'fsbilling.fsbilling.base.models.CurrencyBase': {'bases': ['django.db.models.Model'],
                                                              'constructor': [],
                                                              'docstring': '(CurrencyBase description)',
                                                              'methods': [('__unicode__',
                                                                           [],
                                                                           ''),
                                                                          ('get_absolute_url',
                                                                           [],
                                                                           '')],
                                                              'properties': ['name',
                                                                             'name_small',
                                                                             'code',
                                                                             'objects']},
             'fsbilling.fsbilling.base.models.NibbleBill': {'bases': ['django.db.models.Model'],
                                                            'constructor': [],
                                                            'docstring': '(NibbleBill description)',
                                                            'methods': [('__unicode__', [], ''),
                                                                        ('get_absolute_url',
                                                                         [],
                                                                         '')],
                                                            'properties': ['name',
                                                                           'server',
                                                                           'enabled',
                                                                           'objects',
                                                                           'active_objects',
                                                                           'inactive_objects']},
             'fsbilling.fsbilling.base.tests.BaseTestCase': {'bases': ['django.test.TestCase'],
                                                             'constructor': [],
                                                             'docstring': '',
                                                             'methods': [('setUp', [], ''),
                                                                         ('testBalance',
                                                                          [],
                                                                          'docstring for billing core')],
                                                             'properties': ['fixtures',
                                                                            'user',
                                                                            'Contact1',
                                                                            'client']},
             'fsbilling.fsbilling.cards.admin.TariffAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                             'constructor': [],
                                                             'docstring': '',
                                                             'methods': [('make_enable',
                                                                          ['request',
                                                                           'queryset'],
                                                                          ''),
                                                                         ('make_disable',
                                                                          ['request',
                                                                           'queryset'],
                                                                          '')],
                                                             'properties': ['date_hierarchy',
                                                                            'list_display',
                                                                            'list_filter',
                                                                            'list_editable',
                                                                            'search_fields',
                                                                            'actions',
                                                                            'fieldsets',
                                                                            'save_as',
                                                                            'save_on_top',
                                                                            'list_per_page']},
             'fsbilling.fsbilling.cards.admin.TariffPlanAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                                 'constructor': [],
                                                                 'docstring': '',
                                                                 'methods': [],
                                                                 'properties': ['list_display',
                                                                                'list_filter',
                                                                                'save_as',
                                                                                'save_on_top']},
             'fsbilling.fsbilling.cards.management.commands.load_cards.Command': {'bases': ['django.core.management.base.BaseCommand'],
                                                                                  'constructor': [],
                                                                                  'docstring': '',
                                                                                  'methods': [('handle',
                                                                                               ['fixture_labels',
                                                                                                '**options'],
                                                                                               '')],
                                                                                  'properties': ['option_list',
                                                                                                 'help',
                                                                                                 'args',
                                                                                                 'style']},
             'fsbilling.fsbilling.cards.managers.TariffManager': {'bases': ['django.db.models.Manager'],
                                                                  'constructor': [],
                                                                  'docstring': '',
                                                                  'methods': [('add_tariff',
                                                                               ['gw',
                                                                                'n',
                                                                                'digits'],
                                                                               ''),
                                                                              ('load_tariff',
                                                                               ['gw',
                                                                                'base_file'],
                                                                               '\n        \xd0\x97\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8\xd0\xb7 csv \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0\n        \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe\xd0\xb9 lcr \xd0\xb7\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd0\xb2 \xd1\x82\xd0\xb0\xd0\xb1\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb5 gateway \xd0\xba\xd0\xbe\xd0\xbd\xd1\x84\xd0\xb8\xd0\xb3\xd1\x83\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8\n        \xd0\xbf\xd1\x80\xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd0\xb0\xd1\x82\xd1\x8c lcr_format \n        ')],
                                                                  'properties': []},
             'fsbilling.fsbilling.cards.models.Tariff': {'bases': ['django.db.models.Model'],
                                                         'constructor': [],
                                                         'docstring': '\n    digits - \xd0\xbf\xd1\x80\xd0\xb5\xd1\x84\xd0\xb8\xd0\xba\xd1\x81 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbe\xd0\xbc 4367890\n    name - \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 Austria-mobile Hutchison 3G\n    tariff_plan - \xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xba \xd0\xba\xd0\xb0\xd0\xba\xd0\xbe\xd0\xbc\xd1\x83 \xd1\x82\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd0\xbe\xd0\xbc\xd1\x83 \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\xd1\x83 \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x81\xd0\xb8\xd1\x82\xd1\x81\xd1\x8f \xd1\x81\xd0\xbc\xd0\xbe\xd1\x82\xd1\x80\xd0\xb5\xd1\x82\xd1\x8c id TariffPlan \n    ',
                                                         'methods': [('__unicode__', [], ''),
                                                                     ('get_absolute_url',
                                                                      [],
                                                                      '')],
                                                         'properties': ['digits',
                                                                        'name',
                                                                        'name_lcr',
                                                                        'rate',
                                                                        'tariff_plan',
                                                                        'date_start',
                                                                        'date_end',
                                                                        'enabled',
                                                                        'objects',
                                                                        'active_objects',
                                                                        'inactive_objects',
                                                                        'enabled_date',
                                                                        'rate_currency',
                                                                        'currency']},
             'fsbilling.fsbilling.cards.models.TariffPlan': {'bases': ['django.db.models.Model'],
                                                             'constructor': [],
                                                             'docstring': '\n    \xd0\xa2\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\n    \xd0\x94\xd0\xbb\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb8 \xd1\x82\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb0 \xd0\xb8\xd0\xb7 cvs \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd1\x83\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb5\xd0\xb3\xd0\xbe \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82\n    \xd0\x9d\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \n    tariff_format = ;|digits,name,tariff_rate,tariff,date_start=%d.%m.%Y 00:00,date_end\n    ; - \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\n    \xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xb5 \xd1\x87\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb7 \xd0\xb7\xd0\xb0\xd0\xbf\xd1\x8f\xd1\x82\xd1\x83\xd1\x8e \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\x92\xd0\x9d\xd0\x98\xd0\x9c\xd0\x90\xd0\x9d\xd0\x98\xd0\x95 \xd0\xb2\xd1\x81\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8f \xd0\xbe\xd0\xb1\xd1\x8f\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\n    rate \xd1\x81\xd1\x82\xd0\xbe\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c 1 \xd0\xbc\xd0\xb8\xd0\xbd\xd1\x83\xd1\x82\xd1\x8b 0.338700\n    date_start - \xd0\x94\xd0\xb0\xd1\x82\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xb0  01.12.08\n    date_end - \xd0\x94\xd0\xb0\xd1\x82\xd0\xb0 \xd0\xbe\xd0\xba\xd0\xbe\xd0\xbd\xd1\x87\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f 31.12.99\n    \n    \xd0\xb5\xd1\x81\xd0\xbb\xd0\xb8 \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd0\xbf\xd1\x83\xd1\x81\xd1\x82\xd0\xb0\xd1\x8f \xd0\xba\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xba\xd0\xb0 \xd1\x82\xd0\xbe \xd0\xb2\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd1\x82\xd0\xb5 other\n    \xd0\xb5\xd1\x81\xd0\xbb\xd0\xb8 \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82 \xd0\xb4\xd0\xb0\xd1\x82\xd1\x8b \xd0\xbe\xd1\x82\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd1\x82\xd0\xbe \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd1\x83\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd1\x8c \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82 date_start=%d.%m.%Y 00:00\n    ',
                                                             'methods': [('__unicode__',
                                                                          [],
                                                                          ''),
                                                                         ('get_absolute_url',
                                                                          [],
                                                                          '')],
                                                             'properties': ['name',
                                                                            'cash_min',
                                                                            'fee',
                                                                            'fee_period',
                                                                            'date_start',
                                                                            'date_end',
                                                                            'enabled',
                                                                            'primary',
                                                                            'tariff_format',
                                                                            'description',
                                                                            'objects',
                                                                            'active_objects',
                                                                            'inactive_objects',
                                                                            'fee_view',
                                                                            'cash_currency',
                                                                            'currency',
                                                                            'enabled_date']},
             'fsbilling.fsbilling.cards.tests.TariffTestCase': {'bases': ['django.test.TestCase'],
                                                                'constructor': [],
                                                                'docstring': '',
                                                                'methods': [('setUp', [], ''),
                                                                            ('testCoreConf',
                                                                             [],
                                                                             'docstring for billing core')],
                                                                'properties': ['fixtures',
                                                                               'client']},
             'fsbilling.fsbilling.prepaid.admin.PrepaidOptions': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                                  'constructor': [],
                                                                  'docstring': '',
                                                                  'methods': [],
                                                                  'properties': ['list_display',
                                                                                 'list_display_links',
                                                                                 'ordering',
                                                                                 'inlines']},
             'fsbilling.fsbilling.prepaid.admin.PrepaidUsage_Inline': {'bases': ['django.contrib.admin.StackedInline'],
                                                                       'constructor': [],
                                                                       'docstring': '',
                                                                       'methods': [],
                                                                       'properties': ['model',
                                                                                      'extra']},
             'fsbilling.fsbilling.prepaid.forms.PrepaidCodeForm': {'bases': ['django.forms.Form'],
                                                                   'constructor': [],
                                                                   'docstring': '',
                                                                   'methods': [],
                                                                   'properties': ['code']},
             'fsbilling.fsbilling.prepaid.forms.PrepaidPayShipForm': {'bases': ['payment.forms.SimplePayShipForm'],
                                                                      'constructor': ['request',
                                                                                      'paymentmodule',
                                                                                      '*args',
                                                                                      '**kwargs'],
                                                                      'docstring': '',
                                                                      'methods': [],
                                                                      'properties': ['prepaidcode']},
             'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.Command': {'bases': ['django.core.management.base.BaseCommand'],
                                                                                      'constructor': [],
                                                                                      'docstring': '',
                                                                                      'methods': [('handle',
                                                                                                   ['fixture_labels',
                                                                                                    '**options'],
                                                                                                   '')],
                                                                                      'properties': ['option_list',
                                                                                                     'help',
                                                                                                     'args',
                                                                                                     'style']},
             'fsbilling.fsbilling.prepaid.migrations.0001_initial.Migration': {'bases': [],
                                                                               'constructor': [],
                                                                               'docstring': '',
                                                                               'methods': [('forwards',
                                                                                            ['orm'],
                                                                                            ''),
                                                                                           ('backwards',
                                                                                            ['orm'],
                                                                                            '')],
                                                                               'properties': ['models',
                                                                                              'complete_apps']},
             'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.Migration': {'bases': [],
                                                                                      'constructor': [],
                                                                                      'docstring': '',
                                                                                      'methods': [('forwards',
                                                                                                   ['orm'],
                                                                                                   ''),
                                                                                                  ('backwards',
                                                                                                   ['orm'],
                                                                                                   '')],
                                                                                      'properties': ['models',
                                                                                                     'complete_apps']},
             'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.Migration': {'bases': [],
                                                                                       'constructor': [],
                                                                                       'docstring': '',
                                                                                       'methods': [('forwards',
                                                                                                    ['orm'],
                                                                                                    ''),
                                                                                                   ('backwards',
                                                                                                    ['orm'],
                                                                                                    '')],
                                                                                       'properties': ['models',
                                                                                                      'complete_apps']},
             'fsbilling.fsbilling.prepaid.models.Prepaid': {'bases': ['django.db.models.Model'],
                                                            'constructor': [],
                                                            'docstring': 'A Prepaid Card which holds value.',
                                                            'methods': [('apply_to_order',
                                                                         ['order'],
                                                                         'Apply up to the full amount of the balance of this cert to the order.\n\n        Returns new balance.\n        '),
                                                                        ('use',
                                                                         ['amount',
                                                                          "notes=''",
                                                                          'orderpayment=None'],
                                                                         'Use some amount of the gift cert, returning the current balance.'),
                                                                        ('save',
                                                                         ['force_insert=False',
                                                                          'force_update=False'],
                                                                         ''),
                                                                        ('__unicode__', [], '')],
                                                            'properties': ['site',
                                                                           'order',
                                                                           'num_prepaid',
                                                                           'code',
                                                                           'purchased_by',
                                                                           'date_added',
                                                                           'date_end',
                                                                           'enabled',
                                                                           'valid',
                                                                           'message',
                                                                           'start_balance',
                                                                           'currency',
                                                                           'objects',
                                                                           'balance',
                                                                           'orderpayment']},
             'fsbilling.fsbilling.prepaid.models.PrepaidManager': {'bases': ['django.db.models.Manager'],
                                                                   'constructor': [],
                                                                   'docstring': '',
                                                                   'methods': [('from_order',
                                                                                ['order'],
                                                                                ''),
                                                                               ('add_prepaid',
                                                                                ['currency',
                                                                                 'site',
                                                                                 'n'],
                                                                                '\n        c - \xd0\x9a\xd0\xbe\xd0\xb4 \xd0\xb2\xd0\xb0\xd0\xbb\xd1\x8e\xd1\x82\xd1\x8b\n        '),
                                                                               ('load_prepaid',
                                                                                ['currency',
                                                                                 'site',
                                                                                 'base_file'],
                                                                                '\n        \xd0\x97\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8\xd0\xb7 csv \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0\n        ')],
                                                                   'properties': []},
             'fsbilling.fsbilling.prepaid.models.PrepaidProduct': {'bases': ['product.models.Product'],
                                                                   'constructor': [],
                                                                   'docstring': '\n    The product model for a Gift Certificate\n    ',
                                                                   'methods': [('__unicode__',
                                                                                [],
                                                                                ''),
                                                                               ('_get_subtype',
                                                                                [],
                                                                                ''),
                                                                               ('order_success',
                                                                                ['order',
                                                                                 'order_item'],
                                                                                '')],
                                                                   'properties': ['objects',
                                                                                  'is_shippable',
                                                                                  'discountable']},
             'fsbilling.fsbilling.prepaid.models.PrepaidUsage': {'bases': ['django.db.models.Model'],
                                                                 'constructor': [],
                                                                 'docstring': 'Any usage of a Gift Cert is logged with one of these objects.',
                                                                 'methods': [('__unicode__',
                                                                              [],
                                                                              ''),
                                                                             ('save',
                                                                              ['force_insert=False',
                                                                               'force_update=False'],
                                                                              '')],
                                                                 'properties': ['usage_date',
                                                                                'notes',
                                                                                'balance_used',
                                                                                'orderpayment',
                                                                                'used_by',
                                                                                'prepaid']},
             'fsbilling.fsbilling.prepaid.processor.PaymentProcessor': {'bases': ['payment.modules.base.BasePaymentProcessor'],
                                                                        'constructor': ['settings'],
                                                                        'docstring': '',
                                                                        'methods': [('capture_payment',
                                                                                     ['testing=False',
                                                                                      'order=None',
                                                                                      'amount=NOTSET'],
                                                                                     '\n        Process the transaction and return a ProcessorResponse\n        ')],
                                                                        'properties': []},
             'fsbilling.fsbilling.prepaid.tests.TestCertCreate': {'bases': ['django.test.TestCase'],
                                                                  'constructor': [],
                                                                  'docstring': '',
                                                                  'methods': [('setUp', [], ''),
                                                                              ('tearDown',
                                                                               [],
                                                                               ''),
                                                                              ('testCreate',
                                                                               [],
                                                                               ''),
                                                                              ('testUse',
                                                                               [],
                                                                               '')],
                                                                  'properties': ['fixtures',
                                                                                 'site']},
             'fsbilling.fsbilling.profile.tests.XmlCurlTestCase': {'bases': ['django.test.TestCase'],
                                                                   'constructor': [],
                                                                   'docstring': '',
                                                                   'methods': [('setUp',
                                                                                [],
                                                                                ''),
                                                                               ('testRegistration',
                                                                                [],
                                                                                '')],
                                                                   'properties': ['fixtures',
                                                                                  'client']},
             'fsbilling.fsbilling.tariff.admin.TariffAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                              'constructor': [],
                                                              'docstring': '',
                                                              'methods': [('make_enable',
                                                                           ['request',
                                                                            'queryset'],
                                                                           ''),
                                                                          ('make_disable',
                                                                           ['request',
                                                                            'queryset'],
                                                                           '')],
                                                              'properties': ['date_hierarchy',
                                                                             'list_display',
                                                                             'list_filter',
                                                                             'list_editable',
                                                                             'search_fields',
                                                                             'actions',
                                                                             'fieldsets',
                                                                             'save_as',
                                                                             'save_on_top',
                                                                             'list_per_page']},
             'fsbilling.fsbilling.tariff.admin.TariffPlanAdmin': {'bases': ['django.contrib.admin.ModelAdmin'],
                                                                  'constructor': [],
                                                                  'docstring': '',
                                                                  'methods': [],
                                                                  'properties': ['list_display',
                                                                                 'list_filter',
                                                                                 'save_as',
                                                                                 'save_on_top']},
             'fsbilling.fsbilling.tariff.management.commands.load_tariff.Command': {'bases': ['django.core.management.base.BaseCommand'],
                                                                                    'constructor': [],
                                                                                    'docstring': '',
                                                                                    'methods': [('handle',
                                                                                                 ['fixture_labels',
                                                                                                  '**options'],
                                                                                                 '')],
                                                                                    'properties': ['option_list',
                                                                                                   'help',
                                                                                                   'args',
                                                                                                   'style']},
             'fsbilling.fsbilling.tariff.managers.TariffManager': {'bases': ['django.db.models.Manager'],
                                                                   'constructor': [],
                                                                   'docstring': '',
                                                                   'methods': [('add_tariff',
                                                                                ['tf',
                                                                                 'n',
                                                                                 'digits'],
                                                                                '\n        tf - \xd0\xa2\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\n        '),
                                                                               ('load_tariff',
                                                                                ['tf',
                                                                                 'base_file'],
                                                                                '\n        \xd0\x97\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8\xd0\xb7 csv \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0\n        \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe\xd0\xb9 lcr \xd0\xb7\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd0\xb2 \xd1\x82\xd0\xb0\xd0\xb1\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb5 gateway \xd0\xba\xd0\xbe\xd0\xbd\xd1\x84\xd0\xb8\xd0\xb3\xd1\x83\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8\n        \xd0\xbf\xd1\x80\xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd0\xb0\xd1\x82\xd1\x8c lcr_format \n        ')],
                                                                   'properties': []},
             'fsbilling.fsbilling.tariff.models.Tariff': {'bases': ['django.db.models.Model'],
                                                          'constructor': [],
                                                          'docstring': '\n    digits - \xd0\xbf\xd1\x80\xd0\xb5\xd1\x84\xd0\xb8\xd0\xba\xd1\x81 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbe\xd0\xbc 4367890\n    name - \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 Austria-mobile Hutchison 3G\n    tariff_plan - \xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xba \xd0\xba\xd0\xb0\xd0\xba\xd0\xbe\xd0\xbc\xd1\x83 \xd1\x82\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd0\xbe\xd0\xbc\xd1\x83 \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\xd1\x83 \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x81\xd0\xb8\xd1\x82\xd1\x81\xd1\x8f \xd1\x81\xd0\xbc\xd0\xbe\xd1\x82\xd1\x80\xd0\xb5\xd1\x82\xd1\x8c id TariffPlan \n    ',
                                                          'methods': [('__unicode__', [], ''),
                                                                      ('get_absolute_url',
                                                                       [],
                                                                       ''),
                                                                      ('rate_currency',
                                                                       [],
                                                                       'docstring for rate_currency')],
                                                          'properties': ['digits',
                                                                         'name',
                                                                         'name_lcr',
                                                                         'rate',
                                                                         'tariff_plan',
                                                                         'date_start',
                                                                         'date_end',
                                                                         'enabled',
                                                                         'objects',
                                                                         'active_objects',
                                                                         'inactive_objects',
                                                                         'enabled_date',
                                                                         'currency']},
             'fsbilling.fsbilling.tariff.models.TariffPlan': {'bases': ['django.db.models.Model'],
                                                              'constructor': [],
                                                              'docstring': '\n    \xd0\xa2\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\n    \xd0\x94\xd0\xbb\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb3\xd1\x80\xd1\x83\xd0\xb7\xd0\xba\xd0\xb8 \xd1\x82\xd0\xb0\xd1\x80\xd0\xb8\xd1\x84\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb0 \xd0\xb8\xd0\xb7 cvs \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd1\x83\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb5\xd0\xb3\xd0\xbe \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82\n    \xd0\x9d\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \n    tariff_format = ;|digits,name,tariff_rate,tariff,date_start=%d.%m.%Y 00:00,date_end\n    ; - \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\n    \xd0\xb4\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xb5 \xd1\x87\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb7 \xd0\xb7\xd0\xb0\xd0\xbf\xd1\x8f\xd1\x82\xd1\x83\xd1\x8e \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\x92\xd0\x9d\xd0\x98\xd0\x9c\xd0\x90\xd0\x9d\xd0\x98\xd0\x95 \xd0\xb2\xd1\x81\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8f \xd0\xbe\xd0\xb1\xd1\x8f\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\n    rate \xd1\x81\xd1\x82\xd0\xbe\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c 1 \xd0\xbc\xd0\xb8\xd0\xbd\xd1\x83\xd1\x82\xd1\x8b 0.338700\n    date_start - \xd0\x94\xd0\xb0\xd1\x82\xd0\xb0 \xd0\xbd\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xb0  01.12.08\n    date_end - \xd0\x94\xd0\xb0\xd1\x82\xd0\xb0 \xd0\xbe\xd0\xba\xd0\xbe\xd0\xbd\xd1\x87\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f 31.12.99\n    \n    \xd0\xb5\xd1\x81\xd0\xbb\xd0\xb8 \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd0\xbf\xd1\x83\xd1\x81\xd1\x82\xd0\xb0\xd1\x8f \xd0\xba\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xba\xd0\xb0 \xd1\x82\xd0\xbe \xd0\xb2\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd1\x82\xd0\xb5 other\n    \xd0\xb5\xd1\x81\xd0\xbb\xd0\xb8 \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82 \xd0\xb4\xd0\xb0\xd1\x82\xd1\x8b \xd0\xbe\xd1\x82\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd1\x82\xd0\xbe \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd1\x83\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd1\x8c \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x82 date_start=%d.%m.%Y 00:00\n    ',
                                                              'methods': [('__unicode__',
                                                                           [],
                                                                           ''),
                                                                          ('get_absolute_url',
                                                                           [],
                                                                           ''),
                                                                          ('fee_view',
                                                                           [],
                                                                           'docstring for fee_view'),
                                                                          ('cash_currency',
                                                                           [],
                                                                           'docstring for rate_currency')],
                                                              'properties': ['name',
                                                                             'cash_min',
                                                                             'fee',
                                                                             'fee_period',
                                                                             'activation',
                                                                             'date_start',
                                                                             'date_end',
                                                                             'enabled',
                                                                             'primary',
                                                                             'tariff_format',
                                                                             'description',
                                                                             'objects',
                                                                             'active_objects',
                                                                             'inactive_objects',
                                                                             'currency',
                                                                             'enabled_date']},
             'fsbilling.fsbilling.tariff.tests.TariffTestCase': {'bases': ['django.test.TestCase'],
                                                                 'constructor': [],
                                                                 'docstring': '',
                                                                 'methods': [('setUp', [], ''),
                                                                             ('testTariffLoad',
                                                                              [],
                                                                              'docstring for billing core')],
                                                                 'properties': ['fixtures',
                                                                                'client']}},
 'CONSTANTS': ['fsbilling.ez_setup.DEFAULT_VERSION',
               'fsbilling.ez_setup.DEFAULT_URL',
               'fsbilling.ez_setup.md5_data',
               'fsbilling.setup.DIRNAME',
               'fsbilling.setup.version',
               'conf.extensions',
               'conf.templates_path',
               'conf.source_suffix',
               'conf.master_doc',
               'conf.project',
               'conf.copyright',
               'conf.version',
               'conf.release',
               'conf.today_fmt',
               'conf.exclude_trees',
               'conf.pygments_style',
               'conf.html_theme',
               'conf.html_static_path',
               'conf.html_last_updated_fmt',
               'conf.html_show_sourcelink',
               'conf.htmlhelp_basename',
               'conf.latex_documents',
               'conf.latex_use_modindex',
               'create-docs.pathToModelviz',
               'create-docs.modelsToProcess',
               'create-docs.pathToRest',
               'create-docs.response',
               'create-docs.model',
               'graph-viz-fsbilling.__version__',
               'graph-viz-fsbilling.__svnid__',
               'graph-viz-fsbilling.__license__',
               'graph-viz-fsbilling.__author__',
               'graph-viz-fsbilling.__contributors__',
               'graph-viz-fsbilling.dot_template',
               'graph-viz-fsbilling.app_label',
               'fsbilling.fsbilling.VERSION',
               'fsbilling.fsbilling.str_version',
               'fsbilling.fsbilling.str_version',
               'fsbilling.fsbilling.__author__',
               'fsbilling.fsbilling.__revision__',
               'fsbilling.fsbilling.__version__',
               'fsbilling.fsbilling.app_templete.admin.l',
               'fsbilling.fsbilling.app_templete.forms.__author__',
               'fsbilling.fsbilling.app_templete.forms.__revision__',
               'fsbilling.fsbilling.app_templete.managers.l',
               'fsbilling.fsbilling.app_templete.models.__author__',
               'fsbilling.fsbilling.app_templete.models.__revision__',
               'fsbilling.fsbilling.app_templete.urls.__author__',
               'fsbilling.fsbilling.app_templete.urls.__revision__',
               'fsbilling.fsbilling.app_templete.urls.urlpatterns',
               'fsbilling.fsbilling.app_templete.views.l',
               'fsbilling.fsbilling.app_templete.views.__author__',
               'fsbilling.fsbilling.app_templete.views.__revision__',
               'fsbilling.fsbilling.base.l',
               'fsbilling.fsbilling.base.admin.l',
               'fsbilling.fsbilling.base.config.SHOP_GROUP',
               'fsbilling.fsbilling.base.forms.__author__',
               'fsbilling.fsbilling.base.forms.__revision__',
               'fsbilling.fsbilling.base.managers.l',
               'fsbilling.fsbilling.base.models.l',
               'fsbilling.fsbilling.base.models.__author__',
               'fsbilling.fsbilling.base.models.__revision__',
               'fsbilling.fsbilling.base.tests.__author__',
               'fsbilling.fsbilling.base.tests.__revision__',
               'fsbilling.fsbilling.base.urls.__author__',
               'fsbilling.fsbilling.base.urls.__revision__',
               'fsbilling.fsbilling.base.urls.urlpatterns',
               'fsbilling.fsbilling.base.views.l',
               'fsbilling.fsbilling.base.views.__author__',
               'fsbilling.fsbilling.base.views.__revision__',
               'fsbilling.fsbilling.base.templatetags.fsb_base.l',
               'fsbilling.fsbilling.base.templatetags.fsb_base.register',
               'fsbilling.fsbilling.cards.admin.l',
               'fsbilling.fsbilling.cards.forms.__author__',
               'fsbilling.fsbilling.cards.forms.__revision__',
               'fsbilling.fsbilling.cards.managers.l',
               'fsbilling.fsbilling.cards.models.l',
               'fsbilling.fsbilling.cards.models.__author__',
               'fsbilling.fsbilling.cards.models.__revision__',
               'fsbilling.fsbilling.cards.models.FEE_TARIFF_CHOICES',
               'fsbilling.fsbilling.cards.tests.__author__',
               'fsbilling.fsbilling.cards.tests.__revision__',
               'fsbilling.fsbilling.cards.urls.__author__',
               'fsbilling.fsbilling.cards.urls.__revision__',
               'fsbilling.fsbilling.cards.urls.urlpatterns',
               'fsbilling.fsbilling.cards.views.l',
               'fsbilling.fsbilling.cards.views.__author__',
               'fsbilling.fsbilling.cards.views.__revision__',
               'fsbilling.fsbilling.cards.management.commands.load_cards.has_bz2',
               'fsbilling.fsbilling.cards.management.commands.load_cards.has_bz2',
               'fsbilling.fsbilling.prepaid.config.PAYMENT_MODULES',
               'fsbilling.fsbilling.prepaid.config.PRODUCTS',
               'fsbilling.fsbilling.prepaid.config.PAYMENT_GROUP',
               'fsbilling.fsbilling.prepaid.models.PREPAIDCODE_KEY',
               'fsbilling.fsbilling.prepaid.models.log',
               'fsbilling.fsbilling.prepaid.tests.log',
               'fsbilling.fsbilling.prepaid.urls.config',
               'fsbilling.fsbilling.prepaid.urls.urlpatterns',
               'fsbilling.fsbilling.prepaid.views.log',
               'fsbilling.fsbilling.prepaid.views.gc',
               'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.has_bz2',
               'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.has_bz2',
               'fsbilling.fsbilling.prepaid.templatetags.satchmo_prepaid.register',
               'fsbilling.fsbilling.profile.l',
               'fsbilling.fsbilling.profile.admin.l',
               'fsbilling.fsbilling.profile.models.__author__',
               'fsbilling.fsbilling.profile.models.__revision__',
               'fsbilling.fsbilling.profile.tests.__author__',
               'fsbilling.fsbilling.profile.tests.__revision__',
               'fsbilling.fsbilling.profile.urls.__author__',
               'fsbilling.fsbilling.profile.urls.__revision__',
               'fsbilling.fsbilling.profile.urls.urlpatterns',
               'fsbilling.fsbilling.profile.views.l',
               'fsbilling.fsbilling.profile.views.__author__',
               'fsbilling.fsbilling.profile.views.__revision__',
               'fsbilling.fsbilling.tariff.admin.l',
               'fsbilling.fsbilling.tariff.forms.__author__',
               'fsbilling.fsbilling.tariff.forms.__revision__',
               'fsbilling.fsbilling.tariff.managers.l',
               'fsbilling.fsbilling.tariff.models.l',
               'fsbilling.fsbilling.tariff.models.__author__',
               'fsbilling.fsbilling.tariff.models.__revision__',
               'fsbilling.fsbilling.tariff.models.FEE_TARIFF_CHOICES',
               'fsbilling.fsbilling.tariff.tests.__author__',
               'fsbilling.fsbilling.tariff.tests.__revision__',
               'fsbilling.fsbilling.tariff.urls.__author__',
               'fsbilling.fsbilling.tariff.urls.__revision__',
               'fsbilling.fsbilling.tariff.urls.urlpatterns',
               'fsbilling.fsbilling.tariff.views.l',
               'fsbilling.fsbilling.tariff.views.__author__',
               'fsbilling.fsbilling.tariff.views.__revision__',
               'fsbilling.fsbilling.tariff.management.commands.load_tariff.has_bz2',
               'fsbilling.fsbilling.tariff.management.commands.load_tariff.has_bz2',
               'fsbilling.fsbilling.urls.log',
               'fsbilling.fsbilling.urls.shop_base',
               'fsbilling.fsbilling.urls.shopregex',
               'fsbilling.fsbilling.urls.shoppatterns',
               'fsbilling.fsbilling.urls.base.log',
               'fsbilling.fsbilling.urls.base.urlpatterns',
               'fsbilling.fsbilling.urls.default.log',
               'fsbilling.fsbilling.urls.default.urlpatterns'],
 'FUNCTIONS': [('fsbilling.ez_setup._validate_md5', ['egg_name', 'data'], ''),
               ('fsbilling.ez_setup.use_setuptools',
                ['version=DEFAULT_VERSION',
                 'download_base=DEFAULT_URL',
                 'to_dir=os.curdir',
                 'download_delay=15'],
                "Automatically find/download setuptools and make it available on sys.path\n\n    `version` should be a valid setuptools version number that is available\n    as an egg for download under the `download_base` URL (which should end with\n    a '/').  `to_dir` is the directory where setuptools will be downloaded, if\n    it is not already available.  If `download_delay` is specified, it should\n    be the number of seconds that will be paused before initiating a download,\n    should one be required.  If an older version of setuptools is installed,\n    this routine will print a message to ``sys.stderr`` and raise SystemExit in\n    an attempt to abort the calling script.\n    "),
               ('fsbilling.ez_setup.download_setuptools',
                ['version=DEFAULT_VERSION',
                 'download_base=DEFAULT_URL',
                 'to_dir=os.curdir',
                 'delay=15'],
                "Download setuptools from a specified location and return its filename\n\n    `version` should be a valid setuptools version number that is available\n    as an egg for download under the `download_base` URL (which should end\n    with a '/'). `to_dir` is the directory where the egg will be downloaded.\n    `delay` is the number of seconds to pause before an actual download attempt.\n    "),
               ('fsbilling.ez_setup.main',
                ['argv', 'version=DEFAULT_VERSION'],
                'Install or upgrade setuptools and EasyInstall'),
               ('fsbilling.ez_setup.update_md5',
                ['filenames'],
                'Update our built-in md5 registry'),
               ('config.set_prefs',
                ['prefs'],
                'This function is called before opening the project'),
               ('config.project_opened',
                ['project'],
                'This function is called after opening the project'),
               ('graph-viz-fsbilling.wrap_doc', ['docString', 'wraplimit=45'], ''),
               ('graph-viz-fsbilling.generate_dot', ['app_label'], ''),
               ('fsbilling.fsbilling.base.handler_create_balance',
                ['sender', 'contact', '**kwargs'],
                ''),
               ('fsbilling.fsbilling.base.views.get_conf',
                ['request'],
                'return nibblebill config file'),
               ('fsbilling.fsbilling.base.templatetags.fsb_base.account_balance',
                ['context'],
                'docstring for accaut_balance'),
               ('fsbilling.fsbilling.cards.views.get_conf',
                ['request'],
                'return nibblebill config file'),
               ('fsbilling.fsbilling.prepaid.tests.make_test_order', ['country', 'state'], ''),
               ('fsbilling.fsbilling.prepaid.utils.generate_certificate_code',
                [],
                "Creates a code, formatted according to the shop owner's preference as set in the config system."),
               ('fsbilling.fsbilling.prepaid.utils.generate_code',
                ['charset', 'format'],
                'Creates the actual code.  Split out for ease of testing.'),
               ('fsbilling.fsbilling.prepaid.views.prepaidcert_pay_ship_process_form',
                ['request', 'contact', 'working_cart', 'payment_module'],
                ''),
               ('fsbilling.fsbilling.prepaid.views.pay_ship_info', ['request'], ''),
               ('fsbilling.fsbilling.prepaid.views.confirm_info',
                ['request', "template='shop/checkout/prepaid/confirm.html'"],
                ''),
               ('fsbilling.fsbilling.prepaid.views.check_balance', ['request'], ''),
               ('fsbilling.fsbilling.prepaid.templatetags.satchmo_prepaid.prepaid_order_summary',
                ['order'],
                'Output a formatted block giving attached gift certifificate details.'),
               ('fsbilling.fsbilling.profile.handler_create_profile',
                ['sender', 'user', '**kwargs'],
                ''),
               ('fsbilling.fsbilling.tariff.views.get_conf',
                ['request'],
                'return nibblebill config file')],
 'HIERARCHY': ['fsbilling',
               'fsbilling.ez_setup',
               'fsbilling.setup',
               'config',
               'conf',
               'create-docs',
               'graph-viz-fsbilling',
               'fsbilling.fsbilling',
               'fsbilling.fsbilling.app_templete',
               'fsbilling.fsbilling.app_templete.admin',
               'fsbilling.fsbilling.app_templete.forms',
               'fsbilling.fsbilling.app_templete.managers',
               'fsbilling.fsbilling.app_templete.models',
               'fsbilling.fsbilling.app_templete.tests',
               'fsbilling.fsbilling.app_templete.urls',
               'fsbilling.fsbilling.app_templete.views',
               'fsbilling.fsbilling.base',
               'fsbilling.fsbilling.base.admin',
               'fsbilling.fsbilling.base.config',
               'fsbilling.fsbilling.base.forms',
               'fsbilling.fsbilling.base.managers',
               'fsbilling.fsbilling.base.models',
               'fsbilling.fsbilling.base.tests',
               'fsbilling.fsbilling.base.urls',
               'fsbilling.fsbilling.base.views',
               'fsbilling.fsbilling.base.management',
               'fsbilling.fsbilling.base.management.commands',
               'fsbilling.fsbilling.base.management.commands.load_billing',
               'fsbilling.fsbilling.base.migrations.0001_initial',
               'fsbilling.fsbilling.base.migrations',
               'fsbilling.fsbilling.base.templatetags',
               'fsbilling.fsbilling.base.templatetags.fsb_base',
               'fsbilling.fsbilling.cards',
               'fsbilling.fsbilling.cards.admin',
               'fsbilling.fsbilling.cards.forms',
               'fsbilling.fsbilling.cards.managers',
               'fsbilling.fsbilling.cards.models',
               'fsbilling.fsbilling.cards.tests',
               'fsbilling.fsbilling.cards.urls',
               'fsbilling.fsbilling.cards.views',
               'fsbilling.fsbilling.cards.management',
               'fsbilling.fsbilling.cards.management.commands',
               'fsbilling.fsbilling.cards.management.commands.load_cards',
               'fsbilling.fsbilling.prepaid',
               'fsbilling.fsbilling.prepaid.admin',
               'fsbilling.fsbilling.prepaid.config',
               'fsbilling.fsbilling.prepaid.forms',
               'fsbilling.fsbilling.prepaid.models',
               'fsbilling.fsbilling.prepaid.processor',
               'fsbilling.fsbilling.prepaid.tests',
               'fsbilling.fsbilling.prepaid.urls',
               'fsbilling.fsbilling.prepaid.utils',
               'fsbilling.fsbilling.prepaid.views',
               'fsbilling.fsbilling.prepaid.management',
               'fsbilling.fsbilling.prepaid.management.commands',
               'fsbilling.fsbilling.prepaid.management.commands.load_prepaid',
               'fsbilling.fsbilling.prepaid.migrations.0001_initial',
               'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid',
               'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency',
               'fsbilling.fsbilling.prepaid.migrations',
               'fsbilling.fsbilling.prepaid.templatetags',
               'fsbilling.fsbilling.prepaid.templatetags.satchmo_prepaid',
               'fsbilling.fsbilling.profile',
               'fsbilling.fsbilling.profile.admin',
               'fsbilling.fsbilling.profile.models',
               'fsbilling.fsbilling.profile.tests',
               'fsbilling.fsbilling.profile.urls',
               'fsbilling.fsbilling.profile.views',
               'fsbilling.fsbilling.tariff',
               'fsbilling.fsbilling.tariff.admin',
               'fsbilling.fsbilling.tariff.forms',
               'fsbilling.fsbilling.tariff.managers',
               'fsbilling.fsbilling.tariff.models',
               'fsbilling.fsbilling.tariff.tests',
               'fsbilling.fsbilling.tariff.urls',
               'fsbilling.fsbilling.tariff.views',
               'fsbilling.fsbilling.tariff.management',
               'fsbilling.fsbilling.tariff.management.commands',
               'fsbilling.fsbilling.tariff.management.commands.load_tariff',
               'fsbilling.fsbilling.urls',
               'fsbilling.fsbilling.urls.base',
               'fsbilling.fsbilling.urls.default'],
 'POINTERS': {'conf.os': 'os',
              'conf.sys': 'sys',
              'create-docs.os': 'os',
              'create-docs.string': 'string',
              'fsbilling.ez_setup.inspect': 'inspect',
              'fsbilling.ez_setup.log': 'distutils.log',
              'fsbilling.ez_setup.main': 'setuptools.command.easy_install.main',
              'fsbilling.ez_setup.md5': 'md5.md5',
              'fsbilling.ez_setup.os': 'os',
              'fsbilling.ez_setup.pkg_resources': 'pkg_resources',
              'fsbilling.ez_setup.re': 're',
              'fsbilling.ez_setup.setuptools': 'setuptools',
              'fsbilling.ez_setup.shutil': 'shutil',
              'fsbilling.ez_setup.sleep': 'time.sleep',
              'fsbilling.ez_setup.sys': 'sys',
              'fsbilling.ez_setup.urllib2': 'urllib2',
              'fsbilling.fsbilling.app_templete.admin._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.app_templete.admin.admin': 'django.contrib.admin',
              'fsbilling.fsbilling.app_templete.admin.databrowse': 'django.contrib.databrowse',
              'fsbilling.fsbilling.app_templete.admin.logging': 'logging',
              'fsbilling.fsbilling.app_templete.forms._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.app_templete.forms.forms': 'django.forms',
              'fsbilling.fsbilling.app_templete.forms.settings': 'django.conf.settings',
              'fsbilling.fsbilling.app_templete.managers.logging': 'logging',
              'fsbilling.fsbilling.app_templete.managers.models': 'django.db.models',
              'fsbilling.fsbilling.app_templete.models._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.app_templete.models.models': 'django.db.models',
              'fsbilling.fsbilling.app_templete.models.settings': 'django.conf.settings',
              'fsbilling.fsbilling.app_templete.tests.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.app_templete.tests.mail': 'django.core.mail',
              'fsbilling.fsbilling.app_templete.tests.test': 'django.test',
              'fsbilling.fsbilling.app_templete.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.app_templete.urls.settings': 'django.conf.settings',
              'fsbilling.fsbilling.app_templete.views._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.app_templete.views.logging': 'logging',
              'fsbilling.fsbilling.app_templete.views.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.Balance': 'fsbilling.base.models.Balance',
              'fsbilling.fsbilling.base.admin.Balance': 'fsbilling.base.models.Balance',
              'fsbilling.fsbilling.base.admin.Currency': 'fsbilling.base.models.Currency',
              'fsbilling.fsbilling.base.admin.CurrencyBase': 'fsbilling.base.models.CurrencyBase',
              'fsbilling.fsbilling.base.admin.NibbleBill': 'fsbilling.base.models.NibbleBill',
              'fsbilling.fsbilling.base.admin._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.base.admin.admin': 'django.contrib.admin',
              'fsbilling.fsbilling.base.admin.databrowse': 'django.contrib.databrowse',
              'fsbilling.fsbilling.base.admin.logging': 'logging',
              'fsbilling.fsbilling.base.config.BooleanValue': 'livesettings.BooleanValue',
              'fsbilling.fsbilling.base.config.ConfigurationGroup': 'livesettings.ConfigurationGroup',
              'fsbilling.fsbilling.base.config.Decimal': 'decimal.Decimal',
              'fsbilling.fsbilling.base.config.DecimalValue': 'livesettings.DecimalValue',
              'fsbilling.fsbilling.base.config.MultipleStringValue': 'livesettings.MultipleStringValue',
              'fsbilling.fsbilling.base.config.PositiveIntegerValue': 'livesettings.PositiveIntegerValue',
              'fsbilling.fsbilling.base.config.StringValue': 'livesettings.StringValue',
              'fsbilling.fsbilling.base.config._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.base.config.config_register': 'livesettings.config_register',
              'fsbilling.fsbilling.base.config.os': 'os',
              'fsbilling.fsbilling.base.config.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.config.urlparse': 'urlparse',
              'fsbilling.fsbilling.base.forms._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.base.forms.forms': 'django.forms',
              'fsbilling.fsbilling.base.forms.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.logging': 'logging',
              'fsbilling.fsbilling.base.management.commands.load_billing.NoArgsCommand': 'django.core.management.base.NoArgsCommand',
              'fsbilling.fsbilling.base.management.commands.load_billing.call_command': 'django.core.management.call_command',
              'fsbilling.fsbilling.base.managers.AddressBook': 'satchmo_store.contact.models.AddressBook',
              'fsbilling.fsbilling.base.managers.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.base.managers.ConfigurationSettings': 'livesettings.ConfigurationSettings',
              'fsbilling.fsbilling.base.managers.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.base.managers.ContactRole': 'satchmo_store.contact.models.ContactRole',
              'fsbilling.fsbilling.base.managers.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.base.managers.CsvData': 'fsadmin.core.utils.CsvData',
              'fsbilling.fsbilling.base.managers.F': 'django.db.models.F',
              'fsbilling.fsbilling.base.managers.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.base.managers.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.base.managers.PhoneNumber': 'satchmo_store.contact.models.PhoneNumber',
              'fsbilling.fsbilling.base.managers.Q': 'django.db.models.Q',
              'fsbilling.fsbilling.base.managers.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.base.managers.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.base.managers.Tariff': 'fsbilling.tariff.models.Tariff',
              'fsbilling.fsbilling.base.managers.TariffPlan': 'fsbilling.tariff.models.TariffPlan',
              'fsbilling.fsbilling.base.managers.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.base.managers.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.base.managers.config_choice_values': 'livesettings.config_choice_values',
              'fsbilling.fsbilling.base.managers.config_value': 'livesettings.config_value',
              'fsbilling.fsbilling.base.managers.connection': 'django.db.connection',
              'fsbilling.fsbilling.base.managers.csv': 'csv',
              'fsbilling.fsbilling.base.managers.datetime': 'datetime',
              'fsbilling.fsbilling.base.managers.force_unicode': 'django.utils.encoding.force_unicode',
              'fsbilling.fsbilling.base.managers.logging': 'logging',
              'fsbilling.fsbilling.base.managers.models': 'django.db.models',
              'fsbilling.fsbilling.base.managers.moneyfmt': 'l10n.utils.moneyfmt',
              'fsbilling.fsbilling.base.managers.re': 're',
              'fsbilling.fsbilling.base.managers.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.managers.string': 'string',
              'fsbilling.fsbilling.base.managers.time': 'time',
              'fsbilling.fsbilling.base.migrations.0001_initial.*': 'fsbilling.base.models.*',
              'fsbilling.fsbilling.base.migrations.0001_initial.CreditChoiceCharField': 'payment.fields.CreditChoiceCharField',
              'fsbilling.fsbilling.base.migrations.0001_initial.CurrencyField': 'satchmo_utils.fields.CurrencyField',
              'fsbilling.fsbilling.base.migrations.0001_initial.PaymentChoiceCharField': 'payment.fields.PaymentChoiceCharField',
              'fsbilling.fsbilling.base.migrations.0001_initial.ShippingChoiceCharField': 'shipping.fields.ShippingChoiceCharField',
              'fsbilling.fsbilling.base.migrations.0001_initial.db': 'south.db.db',
              'fsbilling.fsbilling.base.migrations.0001_initial.models': 'django.db.models',
              'fsbilling.fsbilling.base.models.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.base.models.BalanceManager': 'fsbilling.base.managers.BalanceManager',
              'fsbilling.fsbilling.base.models.CompositionField': 'lib.composition.CompositionField',
              'fsbilling.fsbilling.base.models.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.base.models.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.base.models.CurrencyField': 'satchmo_utils.fields.CurrencyField',
              'fsbilling.fsbilling.base.models.DateFormat': 'django.utils.dateformat.DateFormat',
              'fsbilling.fsbilling.base.models.Decimal': 'django.utils._decimal.Decimal',
              'fsbilling.fsbilling.base.models.ForeignCountField': 'lib.composition.ForeignCountField',
              'fsbilling.fsbilling.base.models.GenericManager': 'fsadmin.core.managers.GenericManager',
              'fsbilling.fsbilling.base.models.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.base.models.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.base.models.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.base.models.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.base.models.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.base.models.TariffPlan': 'fsbilling.tariff.models.TariffPlan',
              'fsbilling.fsbilling.base.models.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.base.models.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.base.models._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.base.models.config': 'fsbilling.fsbilling.base.config',
              'fsbilling.fsbilling.base.models.csv': 'csv',
              'fsbilling.fsbilling.base.models.datetime': 'datetime',
              'fsbilling.fsbilling.base.models.force_unicode': 'django.utils.encoding.force_unicode',
              'fsbilling.fsbilling.base.models.logging': 'logging',
              'fsbilling.fsbilling.base.models.models': 'django.db.models',
              'fsbilling.fsbilling.base.models.os.path': 'os.path',
              'fsbilling.fsbilling.base.models.ru_strftime': 'pytils.dt.ru_strftime',
              'fsbilling.fsbilling.base.models.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.models.signals': 'django.db.models.signals',
              'fsbilling.fsbilling.base.signals': 'userprofile.signals',
              'fsbilling.fsbilling.base.templatetags.fsb_base.Balance': 'fsbilling.base.models.Balance',
              'fsbilling.fsbilling.base.templatetags.fsb_base.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.base.templatetags.fsb_base.config_value': 'livesettings.config_value',
              'fsbilling.fsbilling.base.templatetags.fsb_base.logging': 'logging',
              'fsbilling.fsbilling.base.templatetags.fsb_base.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.templatetags.fsb_base.sys': 'sys',
              'fsbilling.fsbilling.base.templatetags.fsb_base.template': 'django.template',
              'fsbilling.fsbilling.base.tests.Balance': 'fsbilling.base.models.Balance',
              'fsbilling.fsbilling.base.tests.Client': 'django.test.client.Client',
              'fsbilling.fsbilling.base.tests.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.base.tests.ContactRole': 'satchmo_store.contact.models.ContactRole',
              'fsbilling.fsbilling.base.tests.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.base.tests.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.base.tests.csv': 'csv',
              'fsbilling.fsbilling.base.tests.os': 'os',
              'fsbilling.fsbilling.base.tests.sys': 'sys',
              'fsbilling.fsbilling.base.tests.test': 'django.test',
              'fsbilling.fsbilling.base.tests.unittest': 'unittest',
              'fsbilling.fsbilling.base.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.base.urls.settings': 'django.conf.settings',
              'fsbilling.fsbilling.base.views.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.base.views._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.base.views.get_object_or_404': 'django.shortcuts.get_object_or_404',
              'fsbilling.fsbilling.base.views.logging': 'logging',
              'fsbilling.fsbilling.base.views.object_list': 'django.views.generic.list_detail.object_list',
              'fsbilling.fsbilling.base.views.render_to': 'lib.decorators.render_to',
              'fsbilling.fsbilling.base.views.settings': 'django.conf.settings',
              'fsbilling.fsbilling.cards.admin.Tariff': 'fsbilling.tariff.models.Tariff',
              'fsbilling.fsbilling.cards.admin.TariffPlan': 'fsbilling.tariff.models.TariffPlan',
              'fsbilling.fsbilling.cards.admin._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.cards.admin.admin': 'django.contrib.admin',
              'fsbilling.fsbilling.cards.admin.databrowse': 'django.contrib.databrowse',
              'fsbilling.fsbilling.cards.admin.logging': 'logging',
              'fsbilling.fsbilling.cards.forms._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.cards.forms.forms': 'django.forms',
              'fsbilling.fsbilling.cards.forms.settings': 'django.conf.settings',
              'fsbilling.fsbilling.cards.management.commands.load_cards.BaseCommand': 'django.core.management.base.BaseCommand',
              'fsbilling.fsbilling.cards.management.commands.load_cards.CommandError': 'django.core.management.base.CommandError',
              'fsbilling.fsbilling.cards.management.commands.load_cards.ImproperlyConfigured': 'django.core.exceptions.ImproperlyConfigured',
              'fsbilling.fsbilling.cards.management.commands.load_cards.Lcr': 'fsadmin.lcr.models.Lcr',
              'fsbilling.fsbilling.cards.management.commands.load_cards.SofiaGateway': 'fsadmin.gateway.models.SofiaGateway',
              'fsbilling.fsbilling.cards.management.commands.load_cards.SortedDict': 'django.utils.datastructures.SortedDict',
              'fsbilling.fsbilling.cards.management.commands.load_cards.bz2': 'bz2',
              'fsbilling.fsbilling.cards.management.commands.load_cards.connection': 'django.db.connection',
              'fsbilling.fsbilling.cards.management.commands.load_cards.csv': 'csv',
              'fsbilling.fsbilling.cards.management.commands.load_cards.get_apps': 'django.db.models.get_apps',
              'fsbilling.fsbilling.cards.management.commands.load_cards.gzip': 'gzip',
              'fsbilling.fsbilling.cards.management.commands.load_cards.make_option': 'optparse.make_option',
              'fsbilling.fsbilling.cards.management.commands.load_cards.no_style': 'django.core.management.color.no_style',
              'fsbilling.fsbilling.cards.management.commands.load_cards.os': 'os',
              'fsbilling.fsbilling.cards.management.commands.load_cards.serializers': 'django.core.serializers',
              'fsbilling.fsbilling.cards.management.commands.load_cards.settings': 'django.conf.settings',
              'fsbilling.fsbilling.cards.management.commands.load_cards.sys': 'sys',
              'fsbilling.fsbilling.cards.management.commands.load_cards.transaction': 'django.db.transaction',
              'fsbilling.fsbilling.cards.management.commands.load_cards.zipfile': 'zipfile',
              'fsbilling.fsbilling.cards.managers.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.cards.managers.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.cards.managers.CsvData': 'fsadmin.core.utils.CsvData',
              'fsbilling.fsbilling.cards.managers.F': 'django.db.models.F',
              'fsbilling.fsbilling.cards.managers.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.cards.managers.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.cards.managers.Q': 'django.db.models.Q',
              'fsbilling.fsbilling.cards.managers.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.cards.managers.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.cards.managers.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.cards.managers.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.cards.managers.connection': 'django.db.connection',
              'fsbilling.fsbilling.cards.managers.csv': 'csv',
              'fsbilling.fsbilling.cards.managers.datetime': 'datetime',
              'fsbilling.fsbilling.cards.managers.force_unicode': 'django.utils.encoding.force_unicode',
              'fsbilling.fsbilling.cards.managers.logging': 'logging',
              'fsbilling.fsbilling.cards.managers.models': 'django.db.models',
              'fsbilling.fsbilling.cards.managers.re': 're',
              'fsbilling.fsbilling.cards.managers.string': 'string',
              'fsbilling.fsbilling.cards.managers.time': 'time',
              'fsbilling.fsbilling.cards.models.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.cards.models.CompositionField': 'lib.composition.CompositionField',
              'fsbilling.fsbilling.cards.models.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.cards.models.DateFormat': 'django.utils.dateformat.DateFormat',
              'fsbilling.fsbilling.cards.models.ForeignCountField': 'lib.composition.ForeignCountField',
              'fsbilling.fsbilling.cards.models.GenericManager': 'fsadmin.core.managers.GenericManager',
              'fsbilling.fsbilling.cards.models.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.cards.models.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.cards.models.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.cards.models.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.cards.models.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.cards.models.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.cards.models.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.cards.models._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.cards.models.csv': 'csv',
              'fsbilling.fsbilling.cards.models.datetime': 'datetime',
              'fsbilling.fsbilling.cards.models.force_unicode': 'django.utils.encoding.force_unicode',
              'fsbilling.fsbilling.cards.models.logging': 'logging',
              'fsbilling.fsbilling.cards.models.models': 'django.db.models',
              'fsbilling.fsbilling.cards.models.os.path': 'os.path',
              'fsbilling.fsbilling.cards.models.ru_strftime': 'pytils.dt.ru_strftime',
              'fsbilling.fsbilling.cards.models.settings': 'django.conf.settings',
              'fsbilling.fsbilling.cards.models.signals': 'django.db.models.signals',
              'fsbilling.fsbilling.cards.tests.Client': 'django.test.client.Client',
              'fsbilling.fsbilling.cards.tests.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.cards.tests.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.cards.tests.c': 'fsbilling.core.models.c',
              'fsbilling.fsbilling.cards.tests.csv': 'csv',
              'fsbilling.fsbilling.cards.tests.os': 'os',
              'fsbilling.fsbilling.cards.tests.sys': 'sys',
              'fsbilling.fsbilling.cards.tests.test': 'django.test',
              'fsbilling.fsbilling.cards.tests.unittest': 'unittest',
              'fsbilling.fsbilling.cards.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.cards.urls.settings': 'django.conf.settings',
              'fsbilling.fsbilling.cards.views.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.cards.views._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.cards.views.get_object_or_404': 'django.shortcuts.get_object_or_404',
              'fsbilling.fsbilling.cards.views.logging': 'logging',
              'fsbilling.fsbilling.cards.views.object_list': 'django.views.generic.list_detail.object_list',
              'fsbilling.fsbilling.cards.views.render_to': 'lib.decorators.render_to',
              'fsbilling.fsbilling.cards.views.settings': 'django.conf.settings',
              'fsbilling.fsbilling.prepaid.admin.Prepaid': 'fsbilling.prepaid.models.Prepaid',
              'fsbilling.fsbilling.prepaid.admin.PrepaidProduct': 'fsbilling.prepaid.models.PrepaidProduct',
              'fsbilling.fsbilling.prepaid.admin.PrepaidUsage': 'fsbilling.prepaid.models.PrepaidUsage',
              'fsbilling.fsbilling.prepaid.admin._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.prepaid.admin.admin': 'django.contrib.admin',
              'fsbilling.fsbilling.prepaid.admin.get_language': 'django.utils.translation.get_language',
              'fsbilling.fsbilling.prepaid.config.*': 'livesettings.*',
              'fsbilling.fsbilling.prepaid.config._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.prepaid.forms.SimplePayShipForm': 'payment.forms.SimplePayShipForm',
              'fsbilling.fsbilling.prepaid.forms._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.prepaid.forms.forms': 'django.forms',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.BaseCommand': 'django.core.management.base.BaseCommand',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.CommandError': 'django.core.management.base.CommandError',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.CurrencyBase': 'fsbilling.base.models.CurrencyBase',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.ImproperlyConfigured': 'django.core.exceptions.ImproperlyConfigured',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.Prepaid': 'fsbilling.prepaid.models.Prepaid',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.PrepaidProduct': 'fsbilling.prepaid.models.PrepaidProduct',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.Site': 'django.contrib.sites.models.Site',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.SortedDict': 'django.utils.datastructures.SortedDict',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.bz2': 'bz2',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.connection': 'django.db.connection',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.csv': 'csv',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.get_apps': 'django.db.models.get_apps',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.gzip': 'gzip',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.make_option': 'optparse.make_option',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.no_style': 'django.core.management.color.no_style',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.os': 'os',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.serializers': 'django.core.serializers',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.settings': 'django.conf.settings',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.sys': 'sys',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.transaction': 'django.db.transaction',
              'fsbilling.fsbilling.prepaid.management.commands.load_prepaid.zipfile': 'zipfile',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.*': 'fsbilling.prepaid.models.*',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.CreditChoiceCharField': 'payment.fields.CreditChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.CurrencyField': 'satchmo_utils.fields.CurrencyField',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.PaymentChoiceCharField': 'payment.fields.PaymentChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.ShippingChoiceCharField': 'shipping.fields.ShippingChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.db': 'south.db.db',
              'fsbilling.fsbilling.prepaid.migrations.0001_initial.models': 'django.db.models',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.*': 'fsbilling.prepaid.models.*',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.CreditChoiceCharField': 'payment.fields.CreditChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.CurrencyField': 'satchmo_utils.fields.CurrencyField',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.PaymentChoiceCharField': 'payment.fields.PaymentChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.ShippingChoiceCharField': 'shipping.fields.ShippingChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.db': 'south.db.db',
              'fsbilling.fsbilling.prepaid.migrations.0002_extend_prepaid.models': 'django.db.models',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.*': 'fsbilling.prepaid.models.*',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.CreditChoiceCharField': 'payment.fields.CreditChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.CurrencyField': 'satchmo_utils.fields.CurrencyField',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.PaymentChoiceCharField': 'payment.fields.PaymentChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.ShippingChoiceCharField': 'shipping.fields.ShippingChoiceCharField',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.db': 'south.db.db',
              'fsbilling.fsbilling.prepaid.migrations.0003_extend_currency.models': 'django.db.models',
              'fsbilling.fsbilling.prepaid.models.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.prepaid.models.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.prepaid.models.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.prepaid.models.CsvData': 'fsadmin.core.utils.CsvData',
              'fsbilling.fsbilling.prepaid.models.CurrencyBase': 'fsbilling.base.models.CurrencyBase',
              'fsbilling.fsbilling.prepaid.models.Decimal': 'decimal.Decimal',
              'fsbilling.fsbilling.prepaid.models.F': 'django.db.models.F',
              'fsbilling.fsbilling.prepaid.models.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.prepaid.models.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.prepaid.models.Order': 'satchmo_store.shop.models.Order',
              'fsbilling.fsbilling.prepaid.models.OrderPayment': 'satchmo_store.shop.models.OrderPayment',
              'fsbilling.fsbilling.prepaid.models.Product': 'product.models.Product',
              'fsbilling.fsbilling.prepaid.models.ProductManager': 'product.models.ProductManager',
              'fsbilling.fsbilling.prepaid.models.Q': 'django.db.models.Q',
              'fsbilling.fsbilling.prepaid.models.Site': 'django.contrib.sites.models.Site',
              'fsbilling.fsbilling.prepaid.models.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.prepaid.models.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.prepaid.models.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.prepaid.models._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.prepaid.models.config': 'fsbilling.fsbilling.prepaid.config',
              'fsbilling.fsbilling.prepaid.models.config_value': 'livesettings.config_value',
              'fsbilling.fsbilling.prepaid.models.csv': 'csv',
              'fsbilling.fsbilling.prepaid.models.datetime': 'datetime.datetime',
              'fsbilling.fsbilling.prepaid.models.generate_certificate_code': 'fsbilling.prepaid.utils.generate_certificate_code',
              'fsbilling.fsbilling.prepaid.models.get_processor_by_key': 'payment.utils.get_processor_by_key',
              'fsbilling.fsbilling.prepaid.models.logging': 'logging',
              'fsbilling.fsbilling.prepaid.models.models': 'django.db.models',
              'fsbilling.fsbilling.prepaid.models.moneyfmt': 'l10n.utils.moneyfmt',
              'fsbilling.fsbilling.prepaid.models.os': 'os',
              'fsbilling.fsbilling.prepaid.models.sys': 'sys',
              'fsbilling.fsbilling.prepaid.processor.BasePaymentProcessor': 'payment.modules.base.BasePaymentProcessor',
              'fsbilling.fsbilling.prepaid.processor.NOTSET': 'payment.modules.base.NOTSET',
              'fsbilling.fsbilling.prepaid.processor.Prepaid': 'fsbilling.fsbilling.prepaid.models.Prepaid',
              'fsbilling.fsbilling.prepaid.processor.ProcessorResult': 'payment.modules.base.ProcessorResult',
              'fsbilling.fsbilling.prepaid.processor._': 'django.utils.translation.ugettext',
              'fsbilling.fsbilling.prepaid.processor.moneyfmt': 'l10n.utils.moneyfmt',
              'fsbilling.fsbilling.prepaid.templatetags.satchmo_prepaid.get_filter_args': 'satchmo_utils.templatetags.get_filter_args',
              'fsbilling.fsbilling.prepaid.templatetags.satchmo_prepaid.template': 'django.template',
              'fsbilling.fsbilling.prepaid.tests.*': 'fsbilling.fsbilling.prepaid.models.*',
              'fsbilling.fsbilling.prepaid.tests.AddressBook': 'satchmo_store.contact.models.AddressBook',
              'fsbilling.fsbilling.prepaid.tests.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.prepaid.tests.ContactRole': 'satchmo_store.contact.models.ContactRole',
              'fsbilling.fsbilling.prepaid.tests.Country': 'l10n.models.Country',
              'fsbilling.fsbilling.prepaid.tests.CurrencyBase': 'fsbilling.base.models.CurrencyBase',
              'fsbilling.fsbilling.prepaid.tests.Decimal': 'decimal.Decimal',
              'fsbilling.fsbilling.prepaid.tests.Order': 'satchmo_store.shop.models.Order',
              'fsbilling.fsbilling.prepaid.tests.OrderItem': 'satchmo_store.shop.models.OrderItem',
              'fsbilling.fsbilling.prepaid.tests.OrderItemDetail': 'satchmo_store.shop.models.OrderItemDetail',
              'fsbilling.fsbilling.prepaid.tests.Product': 'product.models.Product',
              'fsbilling.fsbilling.prepaid.tests.Site': 'django.contrib.sites.models.Site',
              'fsbilling.fsbilling.prepaid.tests.TestCase': 'django.test.TestCase',
              'fsbilling.fsbilling.prepaid.tests.cache_delete': 'keyedcache.cache_delete',
              'fsbilling.fsbilling.prepaid.tests.config_get_group': 'livesettings.config_get_group',
              'fsbilling.fsbilling.prepaid.tests.config_value': 'livesettings.config_value',
              'fsbilling.fsbilling.prepaid.tests.csv': 'csv',
              'fsbilling.fsbilling.prepaid.tests.datetime': 'datetime',
              'fsbilling.fsbilling.prepaid.tests.logging': 'logging',
              'fsbilling.fsbilling.prepaid.tests.os': 'os',
              'fsbilling.fsbilling.prepaid.tests.sys': 'sys',
              'fsbilling.fsbilling.prepaid.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.prepaid.urls.config_get_group': 'livesettings.config_get_group',
              'fsbilling.fsbilling.prepaid.utils.config_value': 'livesettings.config_value',
              'fsbilling.fsbilling.prepaid.utils.random': 'random',
              'fsbilling.fsbilling.prepaid.views.Order': 'satchmo_store.shop.models.Order',
              'fsbilling.fsbilling.prepaid.views.PREPAIDCODE_KEY': 'fsbilling.fsbilling.prepaid.models.PREPAIDCODE_KEY',
              'fsbilling.fsbilling.prepaid.views.Prepaid': 'fsbilling.fsbilling.prepaid.models.Prepaid',
              'fsbilling.fsbilling.prepaid.views.PrepaidCodeForm': 'fsbilling.fsbilling.prepaid.forms.PrepaidCodeForm',
              'fsbilling.fsbilling.prepaid.views.PrepaidPayShipForm': 'fsbilling.fsbilling.prepaid.forms.PrepaidPayShipForm',
              'fsbilling.fsbilling.prepaid.views.RequestContext': 'django.template.RequestContext',
              'fsbilling.fsbilling.prepaid.views.Site': 'django.contrib.sites.models.Site',
              'fsbilling.fsbilling.prepaid.views._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.prepaid.views.config_get_group': 'livesettings.config_get_group',
              'fsbilling.fsbilling.prepaid.views.confirm': 'payment.views.confirm',
              'fsbilling.fsbilling.prepaid.views.get_or_create_order': 'payment.utils.get_or_create_order',
              'fsbilling.fsbilling.prepaid.views.http': 'django.http',
              'fsbilling.fsbilling.prepaid.views.logging': 'logging',
              'fsbilling.fsbilling.prepaid.views.lookup_url': 'satchmo_utils.dynamic.lookup_url',
              'fsbilling.fsbilling.prepaid.views.pay_ship_save': 'payment.utils.pay_ship_save',
              'fsbilling.fsbilling.prepaid.views.payship': 'payment.views.payship',
              'fsbilling.fsbilling.prepaid.views.render_to_response': 'django.shortcuts.render_to_response',
              'fsbilling.fsbilling.profile.AddressBook': 'satchmo_store.contact.models.AddressBook',
              'fsbilling.fsbilling.profile.Contact': 'satchmo_store.contact.models.Contact',
              'fsbilling.fsbilling.profile.ContactRole': 'satchmo_store.contact.models.ContactRole',
              'fsbilling.fsbilling.profile.Country': 'l10n.models.Country',
              'fsbilling.fsbilling.profile.PhoneNumber': 'satchmo_store.contact.models.PhoneNumber',
              'fsbilling.fsbilling.profile.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.profile.admin._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.profile.admin.admin': 'django.contrib.admin',
              'fsbilling.fsbilling.profile.admin.databrowse': 'django.contrib.databrowse',
              'fsbilling.fsbilling.profile.admin.logging': 'logging',
              'fsbilling.fsbilling.profile.logging': 'logging',
              'fsbilling.fsbilling.profile.models._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.profile.models.models': 'django.db.models',
              'fsbilling.fsbilling.profile.models.settings': 'django.conf.settings',
              'fsbilling.fsbilling.profile.signals': 'userprofile.signals',
              'fsbilling.fsbilling.profile.tests.Avatar': 'userprofile.models.Avatar',
              'fsbilling.fsbilling.profile.tests.Client': 'django.test.client.Client',
              'fsbilling.fsbilling.profile.tests.EmailValidation': 'userprofile.models.EmailValidation',
              'fsbilling.fsbilling.profile.tests.GoogleDataAPINotFound': 'userprofile.models.GoogleDataAPINotFound',
              'fsbilling.fsbilling.profile.tests.S3BackendNotFound': 'userprofile.models.S3BackendNotFound',
              'fsbilling.fsbilling.profile.tests.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.profile.tests.UserProfileMediaNotFound': 'userprofile.models.UserProfileMediaNotFound',
              'fsbilling.fsbilling.profile.tests.l': 'logging',
              'fsbilling.fsbilling.profile.tests.test': 'django.test',
              'fsbilling.fsbilling.profile.tests.unittest': 'unittest',
              'fsbilling.fsbilling.profile.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.profile.urls.settings': 'django.conf.settings',
              'fsbilling.fsbilling.profile.views._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.profile.views.logging': 'logging',
              'fsbilling.fsbilling.profile.views.settings': 'django.conf.settings',
              'fsbilling.fsbilling.tariff.admin.Tariff': 'fsbilling.tariff.models.Tariff',
              'fsbilling.fsbilling.tariff.admin.TariffPlan': 'fsbilling.tariff.models.TariffPlan',
              'fsbilling.fsbilling.tariff.admin._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.tariff.admin.admin': 'django.contrib.admin',
              'fsbilling.fsbilling.tariff.admin.databrowse': 'django.contrib.databrowse',
              'fsbilling.fsbilling.tariff.admin.logging': 'logging',
              'fsbilling.fsbilling.tariff.forms._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.tariff.forms.forms': 'django.forms',
              'fsbilling.fsbilling.tariff.forms.settings': 'django.conf.settings',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.BaseCommand': 'django.core.management.base.BaseCommand',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.CommandError': 'django.core.management.base.CommandError',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.ImproperlyConfigured': 'django.core.exceptions.ImproperlyConfigured',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.SortedDict': 'django.utils.datastructures.SortedDict',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.Tariff': 'fsbilling.tariff.models.Tariff',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.TariffPlan': 'fsbilling.tariff.models.TariffPlan',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.bz2': 'bz2',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.connection': 'django.db.connection',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.csv': 'csv',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.get_apps': 'django.db.models.get_apps',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.gzip': 'gzip',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.make_option': 'optparse.make_option',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.no_style': 'django.core.management.color.no_style',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.os': 'os',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.serializers': 'django.core.serializers',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.settings': 'django.conf.settings',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.sys': 'sys',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.transaction': 'django.db.transaction',
              'fsbilling.fsbilling.tariff.management.commands.load_tariff.zipfile': 'zipfile',
              'fsbilling.fsbilling.tariff.managers.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.tariff.managers.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.tariff.managers.CsvData': 'fsadmin.core.utils.CsvData',
              'fsbilling.fsbilling.tariff.managers.F': 'django.db.models.F',
              'fsbilling.fsbilling.tariff.managers.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.tariff.managers.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.tariff.managers.Q': 'django.db.models.Q',
              'fsbilling.fsbilling.tariff.managers.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.tariff.managers.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.tariff.managers.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.tariff.managers.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.tariff.managers.connection': 'django.db.connection',
              'fsbilling.fsbilling.tariff.managers.csv': 'csv',
              'fsbilling.fsbilling.tariff.managers.datetime': 'datetime',
              'fsbilling.fsbilling.tariff.managers.force_unicode': 'django.utils.encoding.force_unicode',
              'fsbilling.fsbilling.tariff.managers.logging': 'logging',
              'fsbilling.fsbilling.tariff.managers.models': 'django.db.models',
              'fsbilling.fsbilling.tariff.managers.re': 're',
              'fsbilling.fsbilling.tariff.managers.string': 'string',
              'fsbilling.fsbilling.tariff.managers.time': 'time',
              'fsbilling.fsbilling.tariff.models.Avg': 'django.db.models.Avg',
              'fsbilling.fsbilling.tariff.models.CompositionField': 'lib.composition.CompositionField',
              'fsbilling.fsbilling.tariff.models.Count': 'django.db.models.Count',
              'fsbilling.fsbilling.tariff.models.DateFormat': 'django.utils.dateformat.DateFormat',
              'fsbilling.fsbilling.tariff.models.ForeignCountField': 'lib.composition.ForeignCountField',
              'fsbilling.fsbilling.tariff.models.GenericManager': 'fsadmin.core.managers.GenericManager',
              'fsbilling.fsbilling.tariff.models.Max': 'django.db.models.Max',
              'fsbilling.fsbilling.tariff.models.Min': 'django.db.models.Min',
              'fsbilling.fsbilling.tariff.models.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.tariff.models.StdDev': 'django.db.models.StdDev',
              'fsbilling.fsbilling.tariff.models.Sum': 'django.db.models.Sum',
              'fsbilling.fsbilling.tariff.models.TariffManager': 'fsbilling.tariff.managers.TariffManager',
              'fsbilling.fsbilling.tariff.models.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.tariff.models.Variance': 'django.db.models.Variance',
              'fsbilling.fsbilling.tariff.models._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.tariff.models.csv': 'csv',
              'fsbilling.fsbilling.tariff.models.datetime': 'datetime',
              'fsbilling.fsbilling.tariff.models.force_unicode': 'django.utils.encoding.force_unicode',
              'fsbilling.fsbilling.tariff.models.logging': 'logging',
              'fsbilling.fsbilling.tariff.models.models': 'django.db.models',
              'fsbilling.fsbilling.tariff.models.os.path': 'os.path',
              'fsbilling.fsbilling.tariff.models.ru_strftime': 'pytils.dt.ru_strftime',
              'fsbilling.fsbilling.tariff.models.settings': 'django.conf.settings',
              'fsbilling.fsbilling.tariff.models.signals': 'django.db.models.signals',
              'fsbilling.fsbilling.tariff.tests.Client': 'django.test.client.Client',
              'fsbilling.fsbilling.tariff.tests.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.tariff.tests.Tariff': 'fsbilling.tariff.models.Tariff',
              'fsbilling.fsbilling.tariff.tests.TariffPlan': 'fsbilling.tariff.models.TariffPlan',
              'fsbilling.fsbilling.tariff.tests.User': 'django.contrib.auth.models.User',
              'fsbilling.fsbilling.tariff.tests.csv': 'csv',
              'fsbilling.fsbilling.tariff.tests.os': 'os',
              'fsbilling.fsbilling.tariff.tests.sys': 'sys',
              'fsbilling.fsbilling.tariff.tests.test': 'django.test',
              'fsbilling.fsbilling.tariff.tests.unittest': 'unittest',
              'fsbilling.fsbilling.tariff.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.tariff.urls.settings': 'django.conf.settings',
              'fsbilling.fsbilling.tariff.views.Server': 'fsadmin.server.models.Server',
              'fsbilling.fsbilling.tariff.views._': 'django.utils.translation.ugettext_lazy',
              'fsbilling.fsbilling.tariff.views.get_object_or_404': 'django.shortcuts.get_object_or_404',
              'fsbilling.fsbilling.tariff.views.logging': 'logging',
              'fsbilling.fsbilling.tariff.views.object_list': 'django.views.generic.list_detail.object_list',
              'fsbilling.fsbilling.tariff.views.render_to': 'lib.decorators.render_to',
              'fsbilling.fsbilling.tariff.views.settings': 'django.conf.settings',
              'fsbilling.fsbilling.urls.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.urls.base.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.urls.base.collect_urls': 'signals_ahoy.signals.collect_urls',
              'fsbilling.fsbilling.urls.base.get_satchmo_setting': 'satchmo_store.shop.get_satchmo_setting',
              'fsbilling.fsbilling.urls.base.logging': 'logging',
              'fsbilling.fsbilling.urls.base.prodpatterns': 'product.urls.base.adminpatterns',
              'fsbilling.fsbilling.urls.base.satchmo_store': 'satchmo_store',
              'fsbilling.fsbilling.urls.base.shippatterns': 'shipping.urls.adminpatterns',
              'fsbilling.fsbilling.urls.basepatterns': 'fsbilling.fsbilling.urls.base.urlpatterns',
              'fsbilling.fsbilling.urls.default.*': 'django.conf.urls.defaults.*',
              'fsbilling.fsbilling.urls.default.logging': 'logging',
              'fsbilling.fsbilling.urls.default.satchmo_store': 'satchmo_store',
              'fsbilling.fsbilling.urls.default.settings': 'django.conf.settings',
              'fsbilling.fsbilling.urls.defaultpatterns': 'fsbilling.fsbilling.urls.default.urlpatterns',
              'fsbilling.fsbilling.urls.get_satchmo_setting': 'satchmo_store.shop.get_satchmo_setting',
              'fsbilling.fsbilling.urls.logging': 'logging',
              'fsbilling.fsbilling.urls.shoppatterns': 'satchmo_store.shop.urls.urlpatterns',
              'fsbilling.fsbilling.urls.sitemaps': 'satchmo_store.shop.views.sitemaps.sitemaps',
              'fsbilling.fsbilling.urls.urlhelper': 'satchmo_utils.urlhelper',
              'fsbilling.fsbilling.urls.urlpatterns': 'fsadmin.urls.urlpatterns',
              'fsbilling.setup.find_packages': 'setuptools.find_packages',
              'fsbilling.setup.os': 'os',
              'fsbilling.setup.os.path': 'os.path',
              'fsbilling.setup.setup': 'setuptools.setup',
              'fsbilling.setup.sys': 'sys',
              'graph-viz-fsbilling.Context': 'django.template.Context',
              'graph-viz-fsbilling.ForeignKey': 'django.db.models.fields.related.ForeignKey',
              'graph-viz-fsbilling.GenericRelation': 'django.contrib.contenttypes.generic.GenericRelation',
              'graph-viz-fsbilling.ManyToManyField': 'django.db.models.fields.related.ManyToManyField',
              'graph-viz-fsbilling.OneToOneField': 'django.db.models.fields.related.OneToOneField',
              'graph-viz-fsbilling.Template': 'django.template.Template',
              'graph-viz-fsbilling.get_models': 'django.db.models.get_models',
              'graph-viz-fsbilling.join': 'string.join',
              'graph-viz-fsbilling.models': 'django.db.models',
              'graph-viz-fsbilling.os': 'os',
              'graph-viz-fsbilling.split': 'string.split',
              'graph-viz-fsbilling.sys': 'sys',
              'graph-viz-fsbilling.wrap': 'textwrap.wrap'}}
